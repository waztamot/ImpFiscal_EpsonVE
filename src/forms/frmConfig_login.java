/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package forms;

import generic.iconBarraProgreso;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 * Formulario para la verificacion de session
 * @version 1.0
 * @author Ing. Javier Alarcon
 */
public class frmConfig_login extends javax.swing.JDialog {

    /*---------------------------------------------------*/
    /*---               Constructores                 ---*/
    /*---------------------------------------------------*/
    /**
     * Constructor estandar de la clase jDialog
     * @param parent
     * @param modal 
     */
    public frmConfig_login(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        try {
            JFrame.setDefaultLookAndFeelDecorated(true);
            JDialog.setDefaultLookAndFeelDecorated(true);
            UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e){
            e.printStackTrace();
        }
        initComponents();
        this.setLocationRelativeTo(null);
        this.iconos = new iconBarraProgreso();
        inicializar();
    }
    
    /**
     * Constructor modificado con archivo de config de la clase jDialog
     * @param parent
     * @param modal
     * @param tipo 
     * @param config
     */
    public frmConfig_login(java.awt.Frame parent, boolean modal, String tipo, Properties config) {
        super(parent, modal);
        try {
            JFrame.setDefaultLookAndFeelDecorated(true);
            JDialog.setDefaultLookAndFeelDecorated(true);
            UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e){
            e.printStackTrace();
        }
        initComponents();
        this.setLocationRelativeTo(null);
        this.iconos = new iconBarraProgreso();
        this.config = config;
        this.tipo = tipo;
        inicializar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpanelBotones = new javax.swing.JPanel();
        jcmdAceptar = new javax.swing.JButton();
        jcmdCancelar = new javax.swing.JButton();
        jpanelInformacion = new javax.swing.JPanel();
        jlblUsuario = new javax.swing.JLabel();
        jlblClave = new javax.swing.JLabel();
        jtxtUsuario = new javax.swing.JTextField();
        jpassClave = new javax.swing.JPasswordField();
        jtbarNotificacion = new javax.swing.JToolBar();
        jsprMargen = new javax.swing.JToolBar.Separator();
        jlblLogoTunal = new javax.swing.JLabel();
        jsprMargen1 = new javax.swing.JToolBar.Separator();
        jlblNotificacion = new javax.swing.JLabel();

        setTitle("Impresora Fiscal Epson VE - El Tunal C.A.");
        setModal(true);
        setResizable(false);

        jpanelBotones.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jpanelBotones.setFocusable(false);

        jcmdAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recurso/Iconos/Knob_Valid_Green32.png"))); // NOI18N
        jcmdAceptar.setMnemonic('A');
        jcmdAceptar.setText("Aceptar");
        jcmdAceptar.setToolTipText("Confirmar los datos");
        jcmdAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmdAceptarActionPerformed(evt);
            }
        });

        jcmdCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recurso/Iconos/Knob_Cancel32.png"))); // NOI18N
        jcmdCancelar.setMnemonic('C');
        jcmdCancelar.setText("Cancelar");
        jcmdCancelar.setToolTipText("Cancelar el proceso");
        jcmdCancelar.setDefaultCapable(false);
        jcmdCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmdCancelarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jpanelBotonesLayout = new org.jdesktop.layout.GroupLayout(jpanelBotones);
        jpanelBotones.setLayout(jpanelBotonesLayout);
        jpanelBotonesLayout.setHorizontalGroup(
            jpanelBotonesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jpanelBotonesLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jcmdAceptar)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jcmdCancelar)
                .add(140, 140, 140))
        );

        jpanelBotonesLayout.linkSize(new java.awt.Component[] {jcmdAceptar, jcmdCancelar}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jpanelBotonesLayout.setVerticalGroup(
            jpanelBotonesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jpanelBotonesLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jpanelBotonesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jcmdCancelar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jcmdAceptar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jpanelInformacion.setBorder(javax.swing.BorderFactory.createTitledBorder("Verificacion de Datos"));
        jpanelInformacion.setFocusable(false);

        jlblUsuario.setText("Usuario");
        jlblUsuario.setFocusable(false);

        jlblClave.setText("Contraseña");
        jlblClave.setFocusable(false);

        jtxtUsuario.setToolTipText("<HTML>\n<BODY>\nUsuario para el cambio de configuración<br/>\n</BODY>\n</HTML>");

        jpassClave.setToolTipText("<HTML>\n<BODY>\nClave para el cambio de configuración<br/>\n</BODY>\n</HTML>");

        org.jdesktop.layout.GroupLayout jpanelInformacionLayout = new org.jdesktop.layout.GroupLayout(jpanelInformacion);
        jpanelInformacion.setLayout(jpanelInformacionLayout);
        jpanelInformacionLayout.setHorizontalGroup(
            jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpanelInformacionLayout.createSequentialGroup()
                .addContainerGap()
                .add(jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jlblClave)
                    .add(jlblUsuario))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jtxtUsuario)
                    .add(jpassClave))
                .addContainerGap())
        );
        jpanelInformacionLayout.setVerticalGroup(
            jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpanelInformacionLayout.createSequentialGroup()
                .addContainerGap()
                .add(jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jlblUsuario)
                    .add(jtxtUsuario, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jlblClave)
                    .add(jpassClave, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtbarNotificacion.setFloatable(false);
        jtbarNotificacion.setRollover(true);
        jtbarNotificacion.setFocusable(false);
        jtbarNotificacion.setName(""); // NOI18N
        jtbarNotificacion.add(jsprMargen);

        jlblLogoTunal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recurso/Iconos/tunal_icon.png"))); // NOI18N
        jlblLogoTunal.setFocusable(false);
        jtbarNotificacion.add(jlblLogoTunal);

        jsprMargen1.setSeparatorSize(new java.awt.Dimension(20, 10));
        jtbarNotificacion.add(jsprMargen1);

        jlblNotificacion.setText("                 ");
        jlblNotificacion.setFocusable(false);
        jlblNotificacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jlblNotificacionMouseExited(evt);
            }
        });
        jtbarNotificacion.add(jlblNotificacion);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jtbarNotificacion, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jpanelBotones, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 283, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jpanelInformacion, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jpanelInformacion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jpanelBotones, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jtbarNotificacion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Validar informacion de login (verificacion de usuario)
     * @param evt 
     */
    private void jcmdAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmdAceptarActionPerformed
        //  Variables
        String valueUsu = "Eltunal2014", valueClv = "";
        
        //  Proceso
        try {
            if (!this.tipo.equalsIgnoreCase("SUPER")) {
                valueUsu = "";
                valueClv = "";
                valueUsu = this.config.getProperty("usu_cntr").trim();
                valueClv = this.config.getProperty("clv_cntr").trim();
            } else {
                valueClv = this.config.getProperty("clv_empr").trim();
            }
            if (this.jtxtUsuario.getText().equals(valueUsu.trim()) && 
                    this.jpassClave.getText().equals(valueClv.trim())){
                this.setOk(true);
                this.setVisible(false);
            } else {
                this.setOk(false);
                this.jlblNotificacion.setIcon(iconos.getErrorImage());
                this.jlblNotificacion.setText("Error Usuario/Clave incorrecto!");
            }
        } catch (Exception ex) {
            this.setOk(false);
            this.jlblNotificacion.setIcon(iconos.getErrorImage());
            this.jlblNotificacion.setText("Error en validacion de datos!");
            Logger.getLogger(frmConfig_login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jcmdAceptarActionPerformed

    /**
     * Cancelar el proceso de login (verificacion de usuario)
     * @param evt 
     */
    private void jcmdCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmdCancelarActionPerformed
        //  Proceso
        if (this.jtxtUsuario.getText().isEmpty() &&
                this.jpassClave.getText().isEmpty())
            this.setVisible(false);
        else {
            this.jtxtUsuario.setText("");
            this.jpassClave.setText("");
            this.setOk(false);
        }
    }//GEN-LAST:event_jcmdCancelarActionPerformed

    /**
     * Restaurar progressBar Notificacion
     * @param evt 
     */
    private void jlblNotificacionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlblNotificacionMouseExited
        //  Proceso
        this.jlblNotificacion.setText("         ");
        this.jlblNotificacion.setIcon(null);
    }//GEN-LAST:event_jlblNotificacionMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jcmdAceptar;
    private javax.swing.JButton jcmdCancelar;
    private javax.swing.JLabel jlblClave;
    private javax.swing.JLabel jlblLogoTunal;
    private javax.swing.JLabel jlblNotificacion;
    private javax.swing.JLabel jlblUsuario;
    private javax.swing.JPanel jpanelBotones;
    private javax.swing.JPanel jpanelInformacion;
    private javax.swing.JPasswordField jpassClave;
    private javax.swing.JToolBar.Separator jsprMargen;
    private javax.swing.JToolBar.Separator jsprMargen1;
    private javax.swing.JToolBar jtbarNotificacion;
    private javax.swing.JTextField jtxtUsuario;
    // End of variables declaration//GEN-END:variables
    
    /*---------------------------------------------------*/
    /*---                  Atributos                  ---*/
    /*---------------------------------------------------*/
    private String tipo;
    private iconBarraProgreso iconos;
    private Properties config;
    private boolean ok;
    
    /*---------------------------------------------------*/
    /*---             Metodos Set y Get               ---*/
    /*---------------------------------------------------*/
    /**
     * Retorna el tipo de login
     * @return tipo
     */
    public String getTipo() {
        return tipo;
    }

    /**
     * Asigna el tipo de login
     * @param tipo 
     */
    public void setTipo(String tipo) {
        this.tipo = tipo;
    }

    /**
     * Retorna el estatus del login
     * @return ok
     */
    public boolean isOk() {
        return ok;
    }

    /**
     * Asigna el estatus del login
     * @param ok 
     */
    private void setOk(boolean ok) {
        this.ok = ok;
    }
    
    /*---------------------------------------------------*/
    /*---             Metodos especificos             ---*/
    /*---------------------------------------------------*/
    /**
     * Inicializar valores del formulario segun archivo
     * de configuracion
     */
    public final void inicializar(){
        
        //  Proceso
        try {
            jcmdCancelarActionPerformed(null);
            this.getRootPane().setDefaultButton(jcmdAceptar);
            this.setOk(false);
        } catch (Exception ex) {
            Logger.getLogger(frmConfig_VerificarDatos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
