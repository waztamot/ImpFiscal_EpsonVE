/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package forms;

import generic.OracleConection;
import generic.iconBarraProgreso;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 * Formulario para visualizar el status de un documento
 * @version 1.0
 * @author Ing. Javier Alarcon
 */
public class frmEstatusDocumentoFI extends javax.swing.JDialog {

    /*---------------------------------------------------*/
    /*---               Constructores                 ---*/
    /*---------------------------------------------------*/
    /**
     * Constructor estandar de la clase jDialog
     * @param parent
     * @param modal 
     */
    public frmEstatusDocumentoFI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        try {
            JFrame.setDefaultLookAndFeelDecorated(true);
            JDialog.setDefaultLookAndFeelDecorated(true);
            UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e){
            e.printStackTrace();
        }
        initComponents();
        this.setLocationRelativeTo(null);
        this.iconos = new iconBarraProgreso();
        inicializar();
    }
    
    /**
     * Constructor modificado con archivo de config de la clase jDialog
     * @param parent
     * @param modal
     * @param configGral
     */
    public frmEstatusDocumentoFI(java.awt.Frame parent, boolean modal, Properties configGral) {
        super(parent, modal);
        try {
            JFrame.setDefaultLookAndFeelDecorated(true);
            JDialog.setDefaultLookAndFeelDecorated(true);
            UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e){
            e.printStackTrace();
        }
        initComponents();
        this.setLocationRelativeTo(null);
        this.configGral = configGral;
        this.iconos = new iconBarraProgreso();
        inicializar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpanelInformacion = new javax.swing.JPanel();
        jlblFechaDoc = new javax.swing.JLabel();
        jtxtFechaDoc = new javax.swing.JTextField();
        jlblDocIF = new javax.swing.JLabel();
        jlblNroDoc = new javax.swing.JLabel();
        jtxtNroDoc = new javax.swing.JTextField();
        jlblBuscar = new javax.swing.JLabel();
        jcmbTpDoc = new javax.swing.JComboBox();
        jlblVendedor = new javax.swing.JLabel();
        jtxtClienteDoc = new javax.swing.JTextField();
        jtxtVendedor = new javax.swing.JTextField();
        jlblClienteDoc = new javax.swing.JLabel();
        jlblSerieDoc = new javax.swing.JLabel();
        jtxtDocIF = new javax.swing.JTextField();
        jlblFechaIF = new javax.swing.JLabel();
        jlblEstatus = new javax.swing.JLabel();
        jtxtEstatus = new javax.swing.JTextField();
        jlblMonto = new javax.swing.JLabel();
        jpanelDocRef = new javax.swing.JPanel();
        jlblNroDocRef = new javax.swing.JLabel();
        jtxtNroDocRef = new javax.swing.JTextField();
        jlblFecDocRef = new javax.swing.JLabel();
        jtxtFecDocRef = new javax.swing.JTextField();
        jlblNroDocIFRef = new javax.swing.JLabel();
        jtxtNroDocIFRef = new javax.swing.JTextField();
        jlblFecIFRef = new javax.swing.JLabel();
        jtxtFecIFRef = new javax.swing.JTextField();
        jlblMontoRef = new javax.swing.JLabel();
        jtxtMontoRef = new javax.swing.JTextField();
        jtxtRifDoc = new javax.swing.JTextField();
        jtxtFechaIF = new javax.swing.JTextField();
        jtxtMonto = new javax.swing.JTextField();
        jpanelBotones = new javax.swing.JPanel();
        jcmdCancelar = new javax.swing.JButton();
        jcmdSalir = new javax.swing.JButton();
        jtbarNotificacion = new javax.swing.JToolBar();
        jsprMargen = new javax.swing.JToolBar.Separator();
        jlblLogoTunal = new javax.swing.JLabel();
        jsprMargen1 = new javax.swing.JToolBar.Separator();
        jlblNotificacion = new javax.swing.JLabel();
        jtbarInfo = new javax.swing.JToolBar();
        jlblInfo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Impresora Fiscal Epson VE - El Tunal C.A.");
        setModal(true);
        setResizable(false);

        jpanelInformacion.setBorder(javax.swing.BorderFactory.createTitledBorder("Visualizar Documentos Fiscales"));
        jpanelInformacion.setFocusable(false);

        jlblFechaDoc.setText("Fecha   Documento");

        jtxtFechaDoc.setEditable(false);
        jtxtFechaDoc.setMaximumSize(new java.awt.Dimension(70, 20));
        jtxtFechaDoc.setMinimumSize(new java.awt.Dimension(70, 20));
        jtxtFechaDoc.setPreferredSize(new java.awt.Dimension(70, 20));

        jlblDocIF.setText("Nro. Doc. Imp. Fiscal");

        jlblNroDoc.setText("Nro. Documento");

        jtxtNroDoc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtNroDoc.setToolTipText("<HTML>\n<BODY>\nNumero del documento a visualizar<br/>\n</BODY>\n</HTML>");
        jtxtNroDoc.setMinimumSize(new java.awt.Dimension(69, 25));
        jtxtNroDoc.setPreferredSize(new java.awt.Dimension(69, 25));
        jtxtNroDoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtNroDocKeyPressed(evt);
            }
        });

        jlblBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recurso/Iconos/Knob_Search24.png"))); // NOI18N
        jlblBuscar.setToolTipText("Buscar el documento");
        jlblBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlblBuscarMouseClicked(evt);
            }
        });

        jcmbTpDoc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "     - Tipo Doc. -", "[FC] - Factura", "[NC] - Nota Crédito" }));
        jcmbTpDoc.setToolTipText("<HTML>\n<BODY>\nTipo del documento a visualizar:<br/>\nPor ejemplo: [FC] - Facturas o [NC] - Nota de Credito\n</BODY>\n</HTML>");
        jcmbTpDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmbTpDocActionPerformed(evt);
            }
        });
        jcmbTpDoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcmbTpDocKeyPressed(evt);
            }
        });

        jlblVendedor.setText("Vendedor");
        jlblVendedor.setToolTipText("<HTML>\n<BODY>\nRepetir clave nueva para la cambiar la configuración del sistema<br/>\n</BODY>\n</HTML>");

        jtxtClienteDoc.setEditable(false);
        jtxtClienteDoc.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jtxtVendedor.setEditable(false);
        jtxtVendedor.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jlblClienteDoc.setText("Cliente Documento");

        jlblSerieDoc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlblSerieDoc.setText("Serie:");

        jtxtDocIF.setEditable(false);
        jtxtDocIF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jlblFechaIF.setText("Fec. Doc. Imp. Fiscal");
        jlblFechaIF.setToolTipText("<HTML>\n<BODY>\nRepetir clave nueva para la cambiar la configuración del sistema<br/>\n</BODY>\n</HTML>");

        jlblEstatus.setText("Estatus Documento");

        jtxtEstatus.setEditable(false);
        jtxtEstatus.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jtxtEstatus.setForeground(new java.awt.Color(255, 255, 255));
        jtxtEstatus.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jlblMonto.setText("Monto");
        jlblMonto.setToolTipText("<HTML>\n<BODY>\nRepetir clave nueva para la cambiar la configuración del sistema<br/>\n</BODY>\n</HTML>");

        jpanelDocRef.setBorder(javax.swing.BorderFactory.createTitledBorder("Documento Referencia"));

        jlblNroDocRef.setText("Nro. Doc.");

        jtxtNroDocRef.setEditable(false);
        jtxtNroDocRef.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtNroDocRef.setMaximumSize(new java.awt.Dimension(70, 20));
        jtxtNroDocRef.setMinimumSize(new java.awt.Dimension(70, 20));
        jtxtNroDocRef.setPreferredSize(new java.awt.Dimension(70, 20));

        jlblFecDocRef.setText("Fecha. Doc.");

        jtxtFecDocRef.setEditable(false);

        jlblNroDocIFRef.setText("Nro. Doc. Fiscal");

        jtxtNroDocIFRef.setEditable(false);
        jtxtNroDocIFRef.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtNroDocIFRef.setMaximumSize(new java.awt.Dimension(70, 20));
        jtxtNroDocIFRef.setMinimumSize(new java.awt.Dimension(70, 20));
        jtxtNroDocIFRef.setPreferredSize(new java.awt.Dimension(70, 20));

        jlblFecIFRef.setText("Fec. Doc. Fiscal");

        jtxtFecIFRef.setEditable(false);

        jlblMontoRef.setText("Monto");

        jtxtMontoRef.setEditable(false);
        jtxtMontoRef.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        org.jdesktop.layout.GroupLayout jpanelDocRefLayout = new org.jdesktop.layout.GroupLayout(jpanelDocRef);
        jpanelDocRef.setLayout(jpanelDocRefLayout);
        jpanelDocRefLayout.setHorizontalGroup(
            jpanelDocRefLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpanelDocRefLayout.createSequentialGroup()
                .addContainerGap()
                .add(jpanelDocRefLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jpanelDocRefLayout.createSequentialGroup()
                        .add(jlblNroDocRef)
                        .add(58, 58, 58)
                        .add(jtxtNroDocRef, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jpanelDocRefLayout.createSequentialGroup()
                        .add(jlblNroDocIFRef)
                        .add(22, 22, 22)
                        .add(jtxtNroDocIFRef, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jpanelDocRefLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jpanelDocRefLayout.createSequentialGroup()
                        .add(jlblMontoRef)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jtxtMontoRef, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 111, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jpanelDocRefLayout.createSequentialGroup()
                        .add(jlblFecDocRef)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jtxtFecDocRef, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 111, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jpanelDocRefLayout.createSequentialGroup()
                        .add(jlblFecIFRef)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jtxtFecIFRef, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 111, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jpanelDocRefLayout.setVerticalGroup(
            jpanelDocRefLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpanelDocRefLayout.createSequentialGroup()
                .addContainerGap()
                .add(jpanelDocRefLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jlblNroDocRef)
                    .add(jtxtNroDocRef, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlblFecDocRef)
                    .add(jtxtFecDocRef, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jpanelDocRefLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jlblNroDocIFRef)
                    .add(jtxtNroDocIFRef, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlblFecIFRef)
                    .add(jtxtFecIFRef, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jpanelDocRefLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jlblMontoRef)
                    .add(jtxtMontoRef, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jtxtRifDoc.setEditable(false);
        jtxtRifDoc.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtxtRifDoc.setMaximumSize(new java.awt.Dimension(70, 20));
        jtxtRifDoc.setMinimumSize(new java.awt.Dimension(70, 20));
        jtxtRifDoc.setPreferredSize(new java.awt.Dimension(70, 20));

        jtxtFechaIF.setEditable(false);

        jtxtMonto.setEditable(false);
        jtxtMonto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        org.jdesktop.layout.GroupLayout jpanelInformacionLayout = new org.jdesktop.layout.GroupLayout(jpanelInformacion);
        jpanelInformacion.setLayout(jpanelInformacionLayout);
        jpanelInformacionLayout.setHorizontalGroup(
            jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jpanelInformacionLayout.createSequentialGroup()
                .addContainerGap()
                .add(jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jpanelDocRef, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jpanelInformacionLayout.createSequentialGroup()
                        .add(jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jlblFechaDoc)
                            .add(jlblDocIF)
                            .add(jlblNroDoc)
                            .add(jlblClienteDoc)
                            .add(jlblEstatus))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jpanelInformacionLayout.createSequentialGroup()
                                .add(jtxtEstatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jlblMonto)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jtxtMonto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 157, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jpanelInformacionLayout.createSequentialGroup()
                                .add(jtxtRifDoc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jtxtClienteDoc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 228, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jpanelInformacionLayout.createSequentialGroup()
                                .add(jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jtxtFechaDoc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jtxtNroDoc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(12, 12, 12)
                                .add(jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jpanelInformacionLayout.createSequentialGroup()
                                        .add(jcmbTpDoc, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(11, 11, 11)
                                        .add(jlblBuscar)
                                        .add(18, 18, 18)
                                        .add(jlblSerieDoc, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(6, 6, 6))
                                    .add(jpanelInformacionLayout.createSequentialGroup()
                                        .add(jlblVendedor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jtxtVendedor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 157, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                            .add(jpanelInformacionLayout.createSequentialGroup()
                                .add(jtxtDocIF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jlblFechaIF)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jtxtFechaIF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 102, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jpanelInformacionLayout.setVerticalGroup(
            jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpanelInformacionLayout.createSequentialGroup()
                .addContainerGap()
                .add(jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jlblBuscar)
                    .add(jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jtxtNroDoc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jlblNroDoc)
                        .add(jcmbTpDoc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jlblSerieDoc)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtxtFechaDoc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlblFechaDoc)
                    .add(jlblVendedor)
                    .add(jtxtVendedor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jlblClienteDoc)
                    .add(jtxtClienteDoc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jtxtRifDoc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jlblDocIF)
                    .add(jtxtDocIF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlblFechaIF)
                    .add(jtxtFechaIF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jpanelInformacionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtxtEstatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlblEstatus)
                    .add(jlblMonto)
                    .add(jtxtMonto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jpanelDocRef, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jpanelDocRef.setVisible(false);

        jpanelBotones.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jpanelBotones.setFocusable(false);

        jcmdCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recurso/Iconos/Knob_Cancel32.png"))); // NOI18N
        jcmdCancelar.setMnemonic('C');
        jcmdCancelar.setText("Cancelar");
        jcmdCancelar.setToolTipText("Cancelar el proceso");
        jcmdCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jcmdCancelarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jcmdCancelarMouseExited(evt);
            }
        });
        jcmdCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmdCancelarActionPerformed(evt);
            }
        });

        jcmdSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recurso/Iconos/Knob_LoopOn32.png"))); // NOI18N
        jcmdSalir.setMnemonic('S');
        jcmdSalir.setText("Salir");
        jcmdSalir.setToolTipText("Cerrar pantalla");
        jcmdSalir.setMaximumSize(new java.awt.Dimension(116, 42));
        jcmdSalir.setMinimumSize(new java.awt.Dimension(116, 42));
        jcmdSalir.setPreferredSize(new java.awt.Dimension(116, 42));
        jcmdSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jcmdSalirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jcmdSalirMouseExited(evt);
            }
        });
        jcmdSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmdSalirActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jpanelBotonesLayout = new org.jdesktop.layout.GroupLayout(jpanelBotones);
        jpanelBotones.setLayout(jpanelBotonesLayout);
        jpanelBotonesLayout.setHorizontalGroup(
            jpanelBotonesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jpanelBotonesLayout.createSequentialGroup()
                .add(108, 108, 108)
                .add(jcmdCancelar)
                .add(18, 18, 18)
                .add(jcmdSalir, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpanelBotonesLayout.setVerticalGroup(
            jpanelBotonesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jpanelBotonesLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jpanelBotonesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jcmdCancelar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jcmdSalir, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jtbarNotificacion.setFloatable(false);
        jtbarNotificacion.setRollover(true);
        jtbarNotificacion.setFocusable(false);
        jtbarNotificacion.setName(""); // NOI18N
        jtbarNotificacion.add(jsprMargen);

        jlblLogoTunal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recurso/Iconos/tunal_icon.png"))); // NOI18N
        jlblLogoTunal.setFocusable(false);
        jtbarNotificacion.add(jlblLogoTunal);

        jsprMargen1.setSeparatorSize(new java.awt.Dimension(20, 10));
        jtbarNotificacion.add(jsprMargen1);

        jlblNotificacion.setText("                 ");
        jlblNotificacion.setFocusable(false);
        jlblNotificacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jlblNotificacionMouseExited(evt);
            }
        });
        jtbarNotificacion.add(jlblNotificacion);

        jtbarInfo.setFloatable(false);
        jtbarInfo.setRollover(true);
        jtbarInfo.setFocusable(false);

        jlblInfo.setText("                ");
        jlblInfo.setToolTipText("");
        jlblInfo.setFocusable(false);
        jtbarInfo.add(jlblInfo);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jtbarNotificacion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 356, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jtbarInfo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jpanelInformacion, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jpanelBotones, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jpanelInformacion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jpanelBotones, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jtbarNotificacion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jtbarInfo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Colocar combinacion de teclas para opcion "Cancelar" en progressBar Info
     * @param evt 
     */
    private void jcmdCancelarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcmdCancelarMouseEntered
        //  Proceso
        this.jlblInfo.setText("Alt + C");
    }//GEN-LAST:event_jcmdCancelarMouseEntered

    /**
     * Restaurar progressBar Info
     * @param evt 
     */
    private void jcmdCancelarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcmdCancelarMouseExited
        //  Proceso
        this.jlblInfo.setText("         ");
    }//GEN-LAST:event_jcmdCancelarMouseExited

    /**
     * Cancelar el proceso y limpiar la pantalla
     * @param evt 
     */
    private void jcmdCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmdCancelarActionPerformed
        //  Proceso
        this.jtxtNroDoc.setText("");
        this.jcmbTpDoc.setSelectedIndex(0);
        this.jlblSerieDoc.setText("Serie:");
        this.jtxtFechaDoc.setText("");
        this.jtxtVendedor.setText("");
        this.jtxtRifDoc.setText("");
        this.jtxtClienteDoc.setText("");
        this.jtxtDocIF.setText("");
        this.jtxtFechaIF.setText("");
        cambioStatus("");
        this.jtxtMonto.setText("");
        this.jpanelDocRef.setVisible(false);
        this.jtxtNroDocRef.setText("");
        this.jtxtFecDocRef.setText("");
        this.jtxtMontoRef.setText("");
        this.resize(504, 331);
        this.repaint();
    }//GEN-LAST:event_jcmdCancelarActionPerformed

    /**
     * Colocar combinacion de teclas para opcion "Salir" en progressBar Info
     * @param evt 
     */
    private void jcmdSalirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcmdSalirMouseEntered
        //  Proceso
        this.jlblInfo.setText("Alt + S");
    }//GEN-LAST:event_jcmdSalirMouseEntered

    /**
     * Restaurar progressBar Info
     * @param evt 
     */
    private void jcmdSalirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcmdSalirMouseExited
        //  Proceso
        this.jlblInfo.setText("         ");
    }//GEN-LAST:event_jcmdSalirMouseExited

    /**
     * Salir del formulario actual
     * @param evt 
     */
    private void jcmdSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmdSalirActionPerformed
        //  Proceso
        this.setVisible(false);
    }//GEN-LAST:event_jcmdSalirActionPerformed

    /**
     * Restaurar progressBar Notificacion
     * @param evt 
     */
    private void jlblNotificacionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlblNotificacionMouseExited
        //  Proceso
        this.jlblNotificacion.setText("         ");
        this.jlblNotificacion.setIcon(null);
    }//GEN-LAST:event_jlblNotificacionMouseExited

    /**
     * Seleccionar el Tipo de Documento
     * @param evt 
     */
    private void jcmbTpDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmbTpDocActionPerformed
        //  Inicializar
        this.jlblSerieDoc.setText("Serie:");
        this.jtxtFechaDoc.setText("");
        this.jtxtVendedor.setText("");
        this.jtxtRifDoc.setText("");
        this.jtxtClienteDoc.setText("");
        this.jtxtDocIF.setText("");
        this.jtxtFechaIF.setText("");
        cambioStatus("");
        this.jtxtMonto.setText("");
        this.jpanelDocRef.setVisible(false);
        this.jtxtNroDocRef.setText("");
        this.jtxtFecDocRef.setText("");
        this.jtxtMontoRef.setText("");
        this.resize(504, 331);
        this.repaint();
        //  Proceso
        if (this.jcmbTpDoc.getSelectedIndex() == 2) {
            this.jpanelDocRef.setVisible(true);
            this.resize(504, 457);
        } else {
            this.jpanelDocRef.setVisible(false);
            this.resize(504, 331);
        }
        this.repaint();
    }//GEN-LAST:event_jcmbTpDocActionPerformed

    /**
     * Realizar la busqueda del documento seleccionado
     * @param evt 
     */
    private void jlblBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlblBuscarMouseClicked
        //  Variables
        List<String> listaDoc, itemDoc = new ArrayList();
        List<String> listaDocRef, itemDocRef = new ArrayList();
        String sql, compania, serie, nroDoc, tpDoc;
        OracleConection oc;
        
        //  Proceso
        this.jlblNotificacionMouseExited(null);
        if (this.jcmbTpDoc.getSelectedIndex() > 0)
            try {
                //  Inicializar
                compania = this.configGral.getProperty("db_empresa").trim();
                serie    = this.configGral.getProperty("db_empresa_serie").trim();
                oc       = new OracleConection(this.configGral);
                nroDoc   = this.jtxtNroDoc.getText().trim();
                if (this.jcmbTpDoc.getSelectedIndex() == 1)
                    tpDoc = " = 'FC' ";
                else
                    tpDoc = "IN ('NC','DV') ";
                oc.Conectar();
                if (oc.isConnOk()){
                    sql = "select " +
                            "        IMFI_NRODOC, "     +
                            "        IMFI_TPDC, "       +
                            "        to_char(IMFI_FECFACT,'DD/MM/YYYY'), "    +
                            "        IMFI_DESCRI, "     +
                            "        IMFI_NRORIF, "     +
                            "        IMFI_DESCRIC, "    +
                            "        IMFI_NROFACIF, "   +
                            "        to_char(IMFI_FECFACTIF,'DD/MM/YYYY'), "  +
                            "        IMFI_STAT1, "      +
                            "        SUM((mvdf_prcunim * mvdf_ctddoc) * (1+(mvdf_porimp/100))), " +
                            "        IMFI_NROFAC, "     +
                            "        IMFI_SERIEFC "     +
                          "from " +
                            "        IMFI_DATA_H, co_tmvdfac " +
                          "where " +
                            "            IMFI_CIAS    ="  + compania.trim() + 
                            "        and IMFI_TPDC    "   + tpDoc.trim()    +
                            "        and IMFI_SERIEDC ='" + serie.trim()    + "'" +
                            "        and IMFI_NRODOC  ="  + nroDoc.trim()   +
                            "        and mvdf_cias    = IMFI_CIAS" +
                            "        and mvdf_tpdc    = IMFI_TPDC" +
                            "        and mvdf_seriedc = IMFI_SERIEDC" +
                            "        and mvdf_nrodoc  = IMFI_NRODOC " +
                          "group by " +
                            "        IMFI_NRODOC,IMFI_TPDC,IMFI_FECFACT,IMFI_DESCRI," +
                            "        IMFI_NRORIF,IMFI_DESCRIC,IMFI_NROFACIF," +
                            "        IMFI_FECFACTIF,IMFI_STAT1,IMFI_NROFAC,IMFI_SERIEFC";
                    listaDoc = oc.busqueda(sql, 13);
                    if (listaDoc != null) {
                        if (!listaDoc.isEmpty()) {
                            for (String cadDoc : listaDoc) {
                                itemDoc.clear();
                                itemDoc.addAll(Arrays.asList(cadDoc.split("-;-")));
                            }
                            if (!itemDoc.isEmpty()){
                                this.jlblSerieDoc.setText(this.jlblSerieDoc
                                        .getText() + serie.trim());
                                this.jtxtFechaDoc.setText(itemDoc.get(2).trim());
                                this.jtxtVendedor.setText(itemDoc.get(3).trim());
                                this.jtxtRifDoc.setText(itemDoc.get(4).trim());
                                this.jtxtClienteDoc.setText(itemDoc.get(5).trim());
                                this.jtxtDocIF.setText(itemDoc.get(6).trim());
                                this.jtxtFechaIF.setText(itemDoc.get(7).trim());
                                cambioStatus(itemDoc.get(8).trim());
                                this.jtxtMonto.setText(itemDoc.get(9).trim());
                                nroDoc = itemDoc.get(10).trim();
                                tpDoc  = " = 'FC'";
                                serie  = itemDoc.get(11).trim();
                            }
                            if (this.jcmbTpDoc.getSelectedIndex() == 2) {
                                sql = "select " +
                                        "        IMFI_NRODOC, "     +
                                        "        IMFI_TPDC, "       +
                                        "        to_char(IMFI_FECFACT,'DD/MM/YYYY'), "    +
                                        "        IMFI_DESCRI, "     +
                                        "        IMFI_NRORIF, "     +
                                        "        IMFI_DESCRIC, "    +
                                        "        IMFI_NROFACIF, "   +
                                        "        to_char(IMFI_FECFACTIF,'DD/MM/YYYY'), "  +
                                        "        IMFI_STAT1, "      +
                                        "        SUM((mvdf_prcunim * mvdf_ctddoc) * (1+(mvdf_porimp/100))), " +
                                        "        IMFI_NROFAC, "     +
                                        "        IMFI_SERIEFC "     +
                                      "from " +
                                        "        IMFI_DATA_H, co_tmvdfac " +
                                      "where " +
                                        "            IMFI_CIAS    ="  + compania.trim() + 
                                        "        and IMFI_TPDC    "   + tpDoc.trim()    +
                                        "        and IMFI_SERIEDC ='" + serie.trim()    + "'" +
                                        "        and IMFI_NRODOC  ="  + nroDoc.trim()   +
                                        "        and mvdf_cias    = IMFI_CIAS" +
                                        "        and mvdf_tpdc    = IMFI_TPDC" +
                                        "        and mvdf_seriedc = IMFI_SERIEDC" +
                                        "        and mvdf_nrodoc  = IMFI_NRODOC " +
                                      "group by " +
                                        "        IMFI_NRODOC,IMFI_TPDC,IMFI_FECFACT,IMFI_DESCRI," +
                                        "        IMFI_NRORIF,IMFI_DESCRIC,IMFI_NROFACIF," +
                                        "        IMFI_FECFACTIF,IMFI_STAT1,IMFI_NROFAC,IMFI_SERIEFC";
                                listaDocRef = oc.busqueda(sql, 13);
                                if (listaDocRef != null) {
                                    if (!listaDocRef.isEmpty()) {
                                        for (String cadDocRef : listaDoc) {
                                            itemDocRef.clear();
                                            itemDocRef.addAll(Arrays.asList(cadDocRef.split("-;-")));
                                        }
                                        if (!itemDocRef.isEmpty()){
                                            this.jtxtNroDocRef.setText(itemDocRef.get(0).trim());
                                            this.jtxtFecDocRef.setText(itemDocRef.get(2).trim());
                                            this.jtxtNroDocIFRef.setText(itemDocRef.get(6).trim());
                                            this.jtxtFecIFRef.setText(itemDocRef.get(7).trim());
                                            this.jtxtMontoRef.setText(itemDocRef.get(9).trim());
                                        }
                                    }
                                }
                            }
                        } else {
                            this.jlblNotificacion.setIcon(iconos.getErrorImage());
                            this.jlblNotificacion.setText("Verifique los datos ingresados!");
                        }
                    } else {
                        this.jlblNotificacion.setIcon(iconos.getErrorImage());
                        this.jlblNotificacion.setText("Verifique los datos ingresados!");
                    }
                } else {
                    this.jlblNotificacion.setIcon(iconos.getErrorImage());
                    this.jlblNotificacion.setText("Perdida de conexion con la BD!");
                }
                oc.Desconectar();
            } catch (Exception ex) {
                this.jlblNotificacion.setIcon(iconos.getErrorImage());
                this.jlblNotificacion.setText("Perdida de conexion con la BD!");
                Logger.getLogger(frmEstatusDocumentoFI.class.getName()).
                        log(Level.SEVERE, null, ex);
            }
        else {
            this.jlblNotificacion.setIcon(iconos.getErrorImage());
            this.jlblNotificacion.setText("Debe seleccionar el tipo de documento!");
        }
    }//GEN-LAST:event_jlblBuscarMouseClicked

    /**
     * Accionar busqueda segun telcla seleccionada
     * @param evt 
     */
    private void jtxtNroDocKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtNroDocKeyPressed
        //  Proceso
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            if (!this.jtxtNroDoc.getText().isEmpty() && 
                    this.jcmbTpDoc.getSelectedIndex() > 0)
                this.jlblBuscarMouseClicked(null);
    }//GEN-LAST:event_jtxtNroDocKeyPressed

    /**
     * Accionar busqueda segun telcla seleccionada
     * @param evt 
     */
    private void jcmbTpDocKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcmbTpDocKeyPressed
        //  Proceso
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            if (!this.jtxtNroDoc.getText().isEmpty() && 
                    this.jcmbTpDoc.getSelectedIndex() > 0)
                this.jlblBuscarMouseClicked(null);
    }//GEN-LAST:event_jcmbTpDocKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jcmbTpDoc;
    private javax.swing.JButton jcmdCancelar;
    private javax.swing.JButton jcmdSalir;
    private javax.swing.JLabel jlblBuscar;
    private javax.swing.JLabel jlblClienteDoc;
    private javax.swing.JLabel jlblDocIF;
    private javax.swing.JLabel jlblEstatus;
    private javax.swing.JLabel jlblFecDocRef;
    private javax.swing.JLabel jlblFecIFRef;
    private javax.swing.JLabel jlblFechaDoc;
    private javax.swing.JLabel jlblFechaIF;
    private javax.swing.JLabel jlblInfo;
    private javax.swing.JLabel jlblLogoTunal;
    private javax.swing.JLabel jlblMonto;
    private javax.swing.JLabel jlblMontoRef;
    private javax.swing.JLabel jlblNotificacion;
    private javax.swing.JLabel jlblNroDoc;
    private javax.swing.JLabel jlblNroDocIFRef;
    private javax.swing.JLabel jlblNroDocRef;
    private javax.swing.JLabel jlblSerieDoc;
    private javax.swing.JLabel jlblVendedor;
    private javax.swing.JPanel jpanelBotones;
    private javax.swing.JPanel jpanelDocRef;
    private javax.swing.JPanel jpanelInformacion;
    private javax.swing.JToolBar.Separator jsprMargen;
    private javax.swing.JToolBar.Separator jsprMargen1;
    private javax.swing.JToolBar jtbarInfo;
    private javax.swing.JToolBar jtbarNotificacion;
    private javax.swing.JTextField jtxtClienteDoc;
    private javax.swing.JTextField jtxtDocIF;
    private javax.swing.JTextField jtxtEstatus;
    private javax.swing.JTextField jtxtFecDocRef;
    private javax.swing.JTextField jtxtFecIFRef;
    private javax.swing.JTextField jtxtFechaDoc;
    private javax.swing.JTextField jtxtFechaIF;
    private javax.swing.JTextField jtxtMonto;
    private javax.swing.JTextField jtxtMontoRef;
    private javax.swing.JTextField jtxtNroDoc;
    private javax.swing.JTextField jtxtNroDocIFRef;
    private javax.swing.JTextField jtxtNroDocRef;
    private javax.swing.JTextField jtxtRifDoc;
    private javax.swing.JTextField jtxtVendedor;
    // End of variables declaration//GEN-END:variables
    
    /*---------------------------------------------------*/
    /*---                  Atributos                  ---*/
    /*---------------------------------------------------*/
    private Properties configGral;
    private iconBarraProgreso iconos;

    /*---------------------------------------------------*/
    /*---             Metodos Set y Get               ---*/
    /*---------------------------------------------------*/
    /**
     * Retorna el archivo properties de config general
     * @return configGral
     */
    public Properties getConfigGral() {
        return configGral;
    }

    /**
     * Asignar el archivo properties de config general
     * @param configGral
     */
    public void setConfigGral(Properties configGral) {
        this.configGral = configGral;
    }
    
    /*---------------------------------------------------*/
    /*---             Metodos especificos             ---*/
    /*---------------------------------------------------*/
    /**
     * Inicializar valores del formulario segun archivo
     * de configuracion
     */
    public final void inicializar(){
        
        //  Proceso
        try {
            jcmdCancelarActionPerformed(null);
        } catch (Exception ex) {
            Logger.getLogger(frmEstatusDocumentoFI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Cambia la visualizacion del status segun sea el caso 
     * (Error, Nuevo, Impreso)
     * @param status 
     */
    private void cambioStatus(String status) {
       if (status.isEmpty()) {
            this.jtxtEstatus.setText("");
            this.jtxtEstatus.setBackground(null);
       } else {
           if (status.equalsIgnoreCase("N")){
               this.jtxtEstatus.setText("Nuevo");
               this.jtxtEstatus.setBackground(Color.blue);
           }
           if (status.equalsIgnoreCase("E")){
               this.jtxtEstatus.setText("Error");
               this.jtxtEstatus.setBackground(Color.red);
           }
           if (status.equalsIgnoreCase("P")){
               this.jtxtEstatus.setText("Impreso");
               this.jtxtEstatus.setBackground(Color.GREEN);
           }
       }
    }
}
